#version 460


layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

uniform sampler2DArray kernel;
uniform sampler2D previous;

uniform float time;
uniform uint width;
uniform uint height;
uniform sampler2D src;
uniform layout(binding=7, rgba8) image2D dst;

vec4 convolve(ivec2 pos, sampler2DArray kernel, sampler2D image) {

    int size = int(textureSize(kernel,0));
    ivec2 offset = ivec2(floor(size/2));
    vec4 sum = vec4(0);

    float positive = 0;
    float negative = 0;
    vec4 current_color = vec4(0);

    for(int x = 0; x < size; x++ ) {
        for(int y = 0; y < size; y++ ) {

            positive = texelFetch(kernel, ivec3(x,y,0), 0).x;
            negative = texelFetch(kernel, ivec3(x,y,1), 0).x;
            current_color = texelFetch(image, pos - offset + ivec2(x,y), 0);

            sum += current_color * positive * 1;
            sum -= current_color * negative * 1;
        }
    }

    return clamp(sum, 0, 1);
}


void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    vec4 prev = texelFetch(previous, pos, 0);
    vec4 curr = texelFetch(src, pos, 0);

    vec4 a = convolve(pos,kernel,previous);
    vec4 b = convolve(pos,kernel,src);

    float adj_a = a.x+a.y+a.z;
    float adj_b = b.x+b.y+b.z;
    //a = vec4(adj_a/2);
    //b = vec4(adj_b/2);

    vec4 value = vec4(b);
    imageStore(dst, pos, value);
}
